<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:p="http://www.springframework.org/schema/p" xmlns:util="http://www.springframework.org/schema/util" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:cache="http://www.springframework.org/schema/cache" xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/jdbc
    http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
    http://www.springframework.org/schema/cache
    http://www.springframework.org/schema/cache/spring-cache-3.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">
<!--     <bean id="helloWorld" class="HelloWord">
         <property name="name" value="阿朱"></property>
    </bean>
    <bean name="/hello" class="MVC.Controlller"></bean>
    <bean class="MVC.AnnotationController"></bean> -->
    <!-- 开启注解扫描 -->
    <context:component-scan base-package="MVC"></context:component-scan>
    <!-- 开启注解驱动支持 ,做了很多事情，比如说返回json对象-->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!-- 静态资源不过滤 -->
  <!--   <mvc:default-servlet-handler/> -->
  
  
  <!-- 这里可以设置前缀和后缀，默认返回地址的 -->
<!--   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
     <property name="prefix" value="/WEB-INF/views/" />
     <property name="suffix" value=".jsp" />
  
  </bean> -->
  <!--转化json  这样子就可以直接返回json数据了-->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!--json视图拦截器，读取到@ResponseBody的时候去配置它-->
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>
    <!--json转化器，它可以将结果转化-->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>
    
    <!-- 接收文件的最大尺寸 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <property name="maxUploadSize">
              <value>#{1024*1024*1024}</value>
         </property>
    </bean>
    <!-- 配置拦截器  可以配置多个拦截，按照顺序调用,如果有多个拦截器，则执行顺序如下
        preHanlder1 - > preHandle2 - > vc - >postHandle2 - > postHandle1  - > 视图结合  - > atfer2 - > after1
    
    -->
    <mvc:interceptors>
        <mvc:interceptor>
            <!-- /*这个只能拦截1级的请求，拦截不了多级请求，/**可以拦截多个请求 如：/login/test -->
            <mvc:mapping path="/**"/>    <!-- 需要过滤哪些请求 -->
            <mvc:exclude-mapping path="/data"/>  <!-- 需要放行哪些请求 -->
            <bean class="MVC.MyInterceptor"></bean>  <!-- 拦截类全限定名 -->
        </mvc:interceptor>
    </mvc:interceptors>
</beans>
